services:
    # Nginx 负载均衡和反向代理
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - ./ssl:/etc/nginx/ssl:ro
            - /var/log/nginx:/var/log/nginx
        depends_on:
            - web
        networks:
            - meet.jitsi
        healthcheck:
            test: ["CMD", "nginx", "-t"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 256M
                reservations:
                    cpus: '0.1'
                    memory: 128M

    # PostgreSQL 数据库 - 用于持久化存储
    postgres:
        image: postgres:15-alpine
        restart: unless-stopped
        environment:
            - POSTGRES_DB=jitsi
            - POSTGRES_USER=jitsi
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
        networks:
            - meet.jitsi
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U jitsi"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 30s
        deploy:
            resources:
                limits:
                    cpus: '1.0'
                    memory: 512M
                reservations:
                    cpus: '0.2'
                    memory: 256M

    # Redis 缓存 - 用于会话管理和缓存
    redis:
        image: redis:7-alpine
        restart: unless-stopped
        command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis_data:/data
        networks:
            - meet.jitsi
        healthcheck:
            test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 256M
                reservations:
                    cpus: '0.1'
                    memory: 128M

    # Jitsi Meet Web 前端服务
    web:
        image: jitsi/web:stable
        restart: unless-stopped
        ports:
            - '${HTTP_PORT}:80'
            - '${HTTPS_PORT}:443'
        volumes:
            - ${CONFIG}/web:/config:Z
            - ${CONFIG}/web/crontabs:/var/spool/cron/crontabs:Z
            - ${CONFIG}/transcripts:/usr/share/jitsi-meet/transcripts:Z
        environment:
            - DISABLE_HTTPS=1
            - ENABLE_HTTP_REDIRECT=1
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - ENABLE_LOBBY
            - ENABLE_PREJOIN_PAGE=1
            - ENABLE_RECORDING
            - ENABLE_P2P=1
            - ENABLE_SIMULCAST=1
            - PUBLIC_URL
            - RESOLUTION
            - RESOLUTION_WIDTH=1280
            - RESOLUTION_WIDTH_MIN=320
            - RESOLUTION_MIN=180
            - START_AUDIO_MUTED
            - START_VIDEO_MUTED
            - XMPP_AUTH_DOMAIN=auth.meet.jitsi
            - XMPP_BOSH_URL_BASE=http://prosody:5280
            - XMPP_DOMAIN=meet.jitsi
            - XMPP_GUEST_DOMAIN=guest.meet.jitsi
            - XMPP_MUC_DOMAIN=muc.meet.jitsi
            - XMPP_RECORDER_DOMAIN=recorder.meet.jitsi
            - XMPP_PORT=5222
            - JICOFO_AUTH_USER=focus
            - NGINX_WORKER_PROCESSES=auto
            - NGINX_WORKER_CONNECTIONS=1024
            # 数据库连接配置
            - DB_TYPE=postgresql
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_NAME=jitsi
            - DB_USER=jitsi
            - DB_PASSWORD=${POSTGRES_PASSWORD}
            # Redis连接配置
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
            prosody:
                condition: service_healthy
        networks:
            - meet.jitsi
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:80/"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s
        deploy:
            resources:
                limits:
                    cpus: '1.0'
                    memory: 1G
                reservations:
                    cpus: '0.2'
                    memory: 512M:

    # XMPP server
    prosody:
        image: jitsi/prosody:stable
        restart: ${RESTART_POLICY:-unless-stopped}
        expose:
            - '5222'
            - '5347'
            - '5280'
        volumes:
            - ${CONFIG}/prosody/config:/config:Z
            - ${CONFIG}/prosody/prosody-plugins-custom:/prosody-plugins-custom:Z
        environment:
            - AUTH_TYPE
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - ENABLE_LOBBY
            - ENABLE_XMPP_WEBSOCKET=1
            - XMPP_DOMAIN=meet.jitsi
            - XMPP_AUTH_DOMAIN=auth.meet.jitsi
            - XMPP_GUEST_DOMAIN=guest.meet.jitsi
            - XMPP_MUC_DOMAIN=muc.meet.jitsi
            - XMPP_INTERNAL_MUC_DOMAIN=internal-muc.meet.jitsi
            - XMPP_RECORDER_DOMAIN=recorder.meet.jitsi
            - XMPP_CROSS_DOMAIN=1
            - JICOFO_COMPONENT_SECRET
            - JICOFO_AUTH_USER=focus
            - JICOFO_AUTH_PASSWORD
            - JVB_AUTH_USER=jvb
            - JVB_AUTH_PASSWORD
            - JIBRI_RECORDER_USER=recorder
            - JIBRI_RECORDER_PASSWORD
            - JIBRI_XMPP_USER=jibri
            - JIBRI_XMPP_PASSWORD
            - ENABLE_RECORDING
            - TZ=Asia/Shanghai
            - PUBLIC_URL
            # 数据库连接配置
            - DB_TYPE=postgresql
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_NAME=jitsi
            - DB_USER=jitsi
            - DB_PASSWORD=${POSTGRES_PASSWORD}
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            meet.jitsi:
                aliases:
                    - ${XMPP_DOMAIN}
        healthcheck:
            test: ["CMD-SHELL", "prosodyctl status || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s
        deploy:
            resources:
                limits:
                    cpus: '1.0'
                    memory: 512M
                reservations:
                    cpus: '0.2'
                    memory: 256M

    # Focus component
    jicofo:
        image: jitsi/jicofo:stable
        restart: ${RESTART_POLICY:-unless-stopped}
        volumes:
            - ${CONFIG}/jicofo:/config:Z
        environment:
            - AUTH_TYPE
            - ENABLE_AUTH
            - ENABLE_AUTO_OWNER=1
            - ENABLE_CODEC_VP8=1
            - ENABLE_CODEC_VP9=1
            - ENABLE_CODEC_H264=1
            - ENABLE_RECORDING
            - JICOFO_AUTH_USER=focus
            - JICOFO_AUTH_PASSWORD
            - JICOFO_ENABLE_BRIDGE_HEALTH_CHECKS=1
            - JICOFO_ENABLE_HEALTH_CHECKS=1
            - JIBRI_BREWERY_MUC=JibriBrewery@internal-muc.meet.jitsi
            - JVB_BREWERY_MUC=JvbBrewery@internal-muc.meet.jitsi
            - MAX_BRIDGE_PARTICIPANTS
            - TZ=Asia/Shanghai
            - XMPP_DOMAIN=meet.jitsi
            - XMPP_AUTH_DOMAIN=auth.meet.jitsi
            - XMPP_INTERNAL_MUC_DOMAIN=internal-muc.meet.jitsi
            - XMPP_MUC_DOMAIN=muc.meet.jitsi
            - XMPP_RECORDER_DOMAIN=recorder.meet.jitsi
            - XMPP_SERVER=prosody
        depends_on:
            prosody:
                condition: service_healthy
        networks:
            meet.jitsi:
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:8888/about/health || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M

    # Video bridge
    jvb:
        image: jitsi/jvb:stable
        restart: ${RESTART_POLICY:-unless-stopped}
        ports:
            - '${JVB_PORT:-10000}:${JVB_PORT:-10000}/udp'
            - '${JVB_TCP_HARVESTER_PORT:-4443}:${JVB_TCP_HARVESTER_PORT:-4443}'
        volumes:
            - ${CONFIG}/jvb:/config:Z
        environment:
            - DOCKER_HOST_ADDRESS
            - ENABLE_COLIBRI_WEBSOCKET=1
            - JVB_AUTH_USER=jvb
            - JVB_AUTH_PASSWORD
            - JVB_BREWERY_MUC=JvbBrewery@internal-muc.meet.jitsi
            - JVB_PORT
            - JVB_TCP_HARVESTER_DISABLED=1
            - JVB_TCP_PORT=4443
            - JVB_STUN_SERVERS=meet-jit-si-turnrelay.jitsi.net:443
            - JVB_ENABLE_APIS=rest,colibri
            - PUBLIC_URL
            - TZ=Asia/Shanghai
            - XMPP_AUTH_DOMAIN=auth.meet.jitsi
            - XMPP_INTERNAL_MUC_DOMAIN=internal-muc.meet.jitsi
            - XMPP_SERVER=prosody
        depends_on:
            prosody:
                condition: service_healthy
        networks:
            meet.jitsi:
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:8080/about/health || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s
        deploy:
            resources:
                limits:
                    cpus: '2.0'
                    memory: 2G
                reservations:
                    cpus: '0.5'
                    memory: 1G

    # Uptime Kuma monitoring
    uptime-kuma:
        image: louislam/uptime-kuma:1
        container_name: uptime-kuma
        restart: unless-stopped
        ports:
            - "3001:3001"
        volumes:
            - uptime-kuma:/app/data
        networks:
            meet.jitsi:
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:3001 || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 256M
                reservations:
                    cpus: '0.1'
                    memory: 128M

volumes:
    postgres_data:
    redis_data:
    uptime-kuma:

networks:
    meet.jitsi:
        driver: bridge